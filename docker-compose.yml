
services:
  # PostgreSQL with pgvector extension
  db:
    image: pgvector/pgvector:pg15
    container_name: research_lab_db
    environment:
      POSTGRES_DB: research_lab_finder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: research_lab_backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/research_lab_finder
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: research_lab_frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev

  # Adminer for database management (optional)
  adminer:
    image: adminer
    container_name: research_lab_adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: research_lab_network